/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package Vistas;

import classes.Detalle;
import classes.Producto;
import db_connection.DBconnection;
import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JFrame;
import javax.swing.JOptionPane;

/**
 *
 * @author LuisFuentes
 */
public class AccionView extends javax.swing.JFrame {

    private String articulo;
    private javax.swing.JFrame inventarioForm;
    private Producto producto;
    private Detalle detalle;
    public DBconnection conexion;
    public static Connection con;
    public static PreparedStatement ps;
    public static ResultSet rs;
    public static PreparedStatement ps_detalle;
    public static ResultSet rs_detalle;
    public static PreparedStatement ps_kardex;
    public static ResultSet rs_kardex;

    public JFrame getInventarioForm() {
        return inventarioForm;
    }

    public void setInventarioForm(JFrame inventarioForm) {
        this.inventarioForm = inventarioForm;
    }

    public String getArticulo() {
        return articulo;
    }

    public void setArticulo(String articulo) {
        this.articulo = articulo;
    }

    /**
     * Creates new form AccionView
     */
    public AccionView() {
        initComponents();
        Accion_panel.setSize(230, 300);
        this.setSize(230, 300);
        this.setLocationRelativeTo(null);
        setDefaultCloseOperation(DISPOSE_ON_CLOSE);
        //articulo_label.setText(articulo);
        //costo_total_txt.setText(articulo);
        System.out.println("Articulo: " + this.articulo);

    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        buttonGroup1 = new javax.swing.ButtonGroup();
        Accion_panel = new javax.swing.JPanel();
        comprar_rButton = new javax.swing.JRadioButton();
        vender_rButton = new javax.swing.JRadioButton();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        anio_txt = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        cantidad_txt = new javax.swing.JTextField();
        jLabel5 = new javax.swing.JLabel();
        costo_unitario_txt = new javax.swing.JTextField();
        jLabel6 = new javax.swing.JLabel();
        costo_total_txt = new javax.swing.JTextField();
        aceptar_button = new javax.swing.JButton();
        cancelar_button = new javax.swing.JButton();
        dia_txt = new javax.swing.JTextField();
        mes_txt = new javax.swing.JTextField();
        jLabel7 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();
        articulo_label = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setResizable(false);

        buttonGroup1.add(comprar_rButton);
        comprar_rButton.setText("Comprar");
        comprar_rButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                comprar_rButtonActionPerformed(evt);
            }
        });

        buttonGroup1.add(vender_rButton);
        vender_rButton.setText("Vender");
        vender_rButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                vender_rButtonActionPerformed(evt);
            }
        });

        jLabel1.setText("Acción:");

        jLabel2.setText("Fecha:");

        anio_txt.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                anio_txtKeyTyped(evt);
            }
        });

        jLabel3.setText("Cantidad:");

        jLabel4.setText("Artículo:");

        cantidad_txt.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                cantidad_txtMouseClicked(evt);
            }
        });
        cantidad_txt.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                cantidad_txtKeyReleased(evt);
            }
            public void keyTyped(java.awt.event.KeyEvent evt) {
                cantidad_txtKeyTyped(evt);
            }
        });

        jLabel5.setText("Costo unitario:");

        costo_unitario_txt.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                costo_unitario_txtKeyReleased(evt);
            }
            public void keyTyped(java.awt.event.KeyEvent evt) {
                costo_unitario_txtKeyTyped(evt);
            }
        });

        jLabel6.setText("Costo total:");

        costo_total_txt.setEditable(false);

        aceptar_button.setText("Aceptar");
        aceptar_button.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                aceptar_buttonActionPerformed(evt);
            }
        });

        cancelar_button.setText("Cancelar");
        cancelar_button.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cancelar_buttonActionPerformed(evt);
            }
        });

        dia_txt.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                dia_txtKeyTyped(evt);
            }
        });

        mes_txt.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                mes_txtKeyTyped(evt);
            }
        });

        jLabel7.setText("Día");

        jLabel8.setText("Mes");

        jLabel9.setText("Año");

        articulo_label.setText("articulo");

        javax.swing.GroupLayout Accion_panelLayout = new javax.swing.GroupLayout(Accion_panel);
        Accion_panel.setLayout(Accion_panelLayout);
        Accion_panelLayout.setHorizontalGroup(
            Accion_panelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(Accion_panelLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(Accion_panelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(Accion_panelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                        .addGroup(javax.swing.GroupLayout.Alignment.LEADING, Accion_panelLayout.createSequentialGroup()
                            .addComponent(jLabel6)
                            .addGap(24, 24, 24)
                            .addComponent(costo_total_txt))
                        .addGroup(javax.swing.GroupLayout.Alignment.LEADING, Accion_panelLayout.createSequentialGroup()
                            .addComponent(jLabel5)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                            .addComponent(costo_unitario_txt, javax.swing.GroupLayout.PREFERRED_SIZE, 70, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(Accion_panelLayout.createSequentialGroup()
                        .addComponent(aceptar_button)
                        .addGap(18, 18, 18)
                        .addComponent(cancelar_button))
                    .addGroup(Accion_panelLayout.createSequentialGroup()
                        .addComponent(jLabel3)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(cantidad_txt, javax.swing.GroupLayout.PREFERRED_SIZE, 72, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(Accion_panelLayout.createSequentialGroup()
                        .addComponent(jLabel4)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(articulo_label, javax.swing.GroupLayout.PREFERRED_SIZE, 87, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(Accion_panelLayout.createSequentialGroup()
                        .addComponent(jLabel1)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(comprar_rButton)
                        .addGap(10, 10, 10)
                        .addComponent(vender_rButton))
                    .addGroup(Accion_panelLayout.createSequentialGroup()
                        .addComponent(jLabel2)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(Accion_panelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(dia_txt, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel7))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(Accion_panelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(Accion_panelLayout.createSequentialGroup()
                                .addComponent(mes_txt, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(anio_txt, javax.swing.GroupLayout.PREFERRED_SIZE, 43, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(Accion_panelLayout.createSequentialGroup()
                                .addComponent(jLabel8)
                                .addGap(18, 18, 18)
                                .addComponent(jLabel9)))))
                .addContainerGap(14, Short.MAX_VALUE))
        );
        Accion_panelLayout.setVerticalGroup(
            Accion_panelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(Accion_panelLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(Accion_panelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel7)
                    .addComponent(jLabel8)
                    .addComponent(jLabel9))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(Accion_panelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(dia_txt, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(mes_txt, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(anio_txt, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(7, 7, 7)
                .addGroup(Accion_panelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(vender_rButton)
                    .addComponent(comprar_rButton))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(Accion_panelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel4)
                    .addComponent(articulo_label))
                .addGap(16, 16, 16)
                .addGroup(Accion_panelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3)
                    .addComponent(cantidad_txt, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(Accion_panelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel5)
                    .addComponent(costo_unitario_txt, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(Accion_panelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel6)
                    .addComponent(costo_total_txt, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(Accion_panelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(aceptar_button)
                    .addComponent(cancelar_button))
                .addContainerGap(22, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(Accion_panel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 300, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(Accion_panel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 200, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void cantidad_txtKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_cantidad_txtKeyTyped
        char caracter = evt.getKeyChar();

        // Verificar si la tecla pulsada no es un digito
        if (((caracter < '0') | (caracter > '9')) & (caracter != '\b')) {
            evt.consume();  // ignorar el evento de teclado
        }
    }//GEN-LAST:event_cantidad_txtKeyTyped

    private void costo_unitario_txtKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_costo_unitario_txtKeyTyped
        char caracter = evt.getKeyChar();

        // Verificar si la tecla pulsada no es un digito
        if (((caracter < '0') | (caracter > '9')) & (caracter != '\b') & (caracter != '.')) {
            evt.consume();  // ignorar el evento de teclado
        }
    }//GEN-LAST:event_costo_unitario_txtKeyTyped

    private void vender_rButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_vender_rButtonActionPerformed
        manejarVenta();
    }//GEN-LAST:event_vender_rButtonActionPerformed

    private void comprar_rButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_comprar_rButtonActionPerformed
        manejarCompra();
    }//GEN-LAST:event_comprar_rButtonActionPerformed

    private void dia_txtKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_dia_txtKeyTyped
        char caracter = evt.getKeyChar();

        // Verificar si la tecla pulsada no es un digito
        if (((caracter < '0') | (caracter > '9')) & (caracter != '\b')) {
            evt.consume();  // ignorar el evento de teclado
        }
    }//GEN-LAST:event_dia_txtKeyTyped

    private void mes_txtKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_mes_txtKeyTyped
        char caracter = evt.getKeyChar();
        String mes = mes_txt.getText().trim();

        // Verificar si la tecla pulsada no es un digito
        if (((caracter < '0') | (caracter > '9')) & (caracter != '\b')) {
            evt.consume();  // ignorar el evento de teclado
        }
    }//GEN-LAST:event_mes_txtKeyTyped

    private void anio_txtKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_anio_txtKeyTyped
        char caracter = evt.getKeyChar();

        // Verificar si la tecla pulsada no es un digito
        if (((caracter < '0') | (caracter > '9')) & (caracter != '\b')) {
            evt.consume();  // ignorar el evento de teclado
        }
    }//GEN-LAST:event_anio_txtKeyTyped

    private void aceptar_buttonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_aceptar_buttonActionPerformed
        realizarAccion();
    }//GEN-LAST:event_aceptar_buttonActionPerformed

    private void costo_unitario_txtKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_costo_unitario_txtKeyReleased
        calcularTotal();
    }//GEN-LAST:event_costo_unitario_txtKeyReleased

    private void cantidad_txtKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_cantidad_txtKeyReleased
        calcularTotal();
    }//GEN-LAST:event_cantidad_txtKeyReleased

    private void cantidad_txtMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_cantidad_txtMouseClicked
        cargarProducto();
    }//GEN-LAST:event_cantidad_txtMouseClicked

    private void cancelar_buttonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cancelar_buttonActionPerformed
        cerrarVentana();
    }//GEN-LAST:event_cancelar_buttonActionPerformed

    void calcularTotal() {
        if (!cantidad_txt.getText().equals("") & !costo_unitario_txt.getText().equals("")) {
            double cantidad = Double.parseDouble(cantidad_txt.getText());
            double costoUnitario = Double.parseDouble(costo_unitario_txt.getText());

            if (costoUnitario >= 0 & cantidad >= 0) {
                double costoTotal = cantidad * costoUnitario;
                costo_total_txt.setText(String.format("%.2f", costoTotal).replace(',', '.'));
            }
        } else {
            costo_total_txt.setText("");
        }
    }

    void manejarCompra() {
        try {
            costo_unitario_txt.setEditable(true);
            detalle = new Detalle();

            String query = "SELECT * FROM detalle WHERE nombre_detalle = ?";
            conexion = new DBconnection("localhost", "3307", "inventario_db", "root", "Mysql@fuentech2018");
            con = conexion.getConnection();
            ps = con.prepareStatement(query);
            ps.setString(1, "compra");

            rs = ps.executeQuery();

            if (rs.next()) {
                detalle.setId(rs.getInt("id_detalle"));
                detalle.setNombre(rs.getString("nombre_detalle"));
            } else {
                JOptionPane.showMessageDialog(null, "No hay registro");
            }

            con.close();

            cargarProducto();
        } catch (SQLException ex) {
            Logger.getLogger(AccionView.class.getName()).log(Level.SEVERE, null, ex);
        }
    }

    void manejarVenta() {
        cargarProducto();
        costo_unitario_txt.setEditable(false);
        costo_unitario_txt.setText(String.valueOf(producto.getCosto_unitario()));

        try {
            detalle = new Detalle();

            String query = "SELECT * FROM detalle WHERE nombre_detalle = ?";
            conexion = new DBconnection("localhost", "3307", "inventario_db", "root", "Mysql@fuentech2018");
            con = conexion.getConnection();
            ps = con.prepareStatement(query);
            ps.setString(1, "venta");

            rs = ps.executeQuery();

            if (rs.next()) {
                detalle.setId(rs.getInt("id_detalle"));
                detalle.setNombre(rs.getString("nombre_detalle"));
            } else {
                JOptionPane.showMessageDialog(null, "No hay registro");
            }

            con.close();

            cargarProducto();
        } catch (SQLException ex) {
            Logger.getLogger(AccionView.class.getName()).log(Level.SEVERE, null, ex);
        }
    }

    void guardarKardex(String accion) {
        try {
            int cantidad = Integer.valueOf(cantidad_txt.getText());
            double total = Double.valueOf(costo_total_txt.getText());

            if (accion.equals("compra")) {

                double compra_unitario = producto.calcularTotal(total) / producto.calcularCantidad(cantidad);
                String fecha = anio_txt.getText() + "-" + mes_txt.getText() + "-" + dia_txt.getText();
                String kardexQuery = "INSERT INTO \n"
                        + "	kardex (\n"
                        + "		fecha, \n"
                        + "        cantidad_entrada, \n"
                        + "        entrada_unitario, \n"
                        + "        entrada_total, \n"
                        + "        id_detalle, \n"
                        + "        id_producto,\n"
                        + "        cantidad_pro,\n"
                        + "        unitario_pro,\n"
                        + "        total_pro) "
                        + "VALUES (?,?,?,?,?,?,?,?,?)";

                conexion = new DBconnection("localhost", "3307", "inventario_db", "root", "Mysql@fuentech2018");
                con = conexion.getConnection();
                ps_kardex = con.prepareStatement(kardexQuery);

                ps_kardex.setString(1, fecha);
                ps_kardex.setInt(2, Integer.valueOf(cantidad_txt.getText()));
                ps_kardex.setDouble(3, Double.valueOf(costo_unitario_txt.getText()));
                ps_kardex.setDouble(4, Double.valueOf(costo_total_txt.getText()));
                ps_kardex.setInt(5, detalle.getId());
                ps_kardex.setInt(6, producto.getId());
                ps_kardex.setInt(7, producto.calcularCantidad(cantidad));
                ps_kardex.setDouble(8, compra_unitario);
                ps_kardex.setDouble(9, producto.calcularTotal(total));

                int notifica = ps_kardex.executeUpdate();

                if (notifica > 0) {
                    cerrarVentana();
                } else {
                    JOptionPane.showMessageDialog(null, "Error al guardar registro");
                }

                con.close();//Cerrar la conexión
            }

            if (accion.equals("venta")) {
                double venta_unitario = producto.ventaTotal(total) / producto.ventaCantidad(cantidad);
                String fecha = anio_txt.getText() + "-" + mes_txt.getText() + "-" + dia_txt.getText();
                String kardexQuery = "INSERT INTO \n"
                        + "	kardex (\n"
                        + "		fecha, \n"
                        + "        cantidad_salida, \n"
                        + "        salida_unitaria, \n"
                        + "        salida_total, \n"
                        + "        id_detalle, \n"
                        + "        id_producto,\n"
                        + "        cantidad_pro,\n"
                        + "        unitario_pro,\n"
                        + "        total_pro) "
                        + "VALUES (?,?,?,?,?,?,?,?,?)";

                conexion = new DBconnection("localhost", "3307", "inventario_db", "root", "Mysql@fuentech2018");
                con = conexion.getConnection();
                ps_kardex = con.prepareStatement(kardexQuery);

                ps_kardex.setString(1, fecha);
                ps_kardex.setInt(2, Integer.valueOf(cantidad_txt.getText()));
                ps_kardex.setDouble(3, Double.valueOf(costo_unitario_txt.getText()));
                ps_kardex.setDouble(4, Double.valueOf(costo_total_txt.getText()));
                ps_kardex.setInt(5, detalle.getId());
                ps_kardex.setInt(6, producto.getId());
                ps_kardex.setInt(7, producto.ventaCantidad(cantidad));
                ps_kardex.setDouble(8, venta_unitario);
                ps_kardex.setDouble(9, producto.ventaTotal(total));

                int notifica = ps_kardex.executeUpdate();

                if (notifica > 0) {
                    cerrarVentana();
                } else {
                    JOptionPane.showMessageDialog(null, "Error al guardar registro");
                }

                con.close();//Cerrar la conexión
            }

        } catch (SQLException ex) {
            Logger.getLogger(AccionView.class.getName()).log(Level.SEVERE, null, ex);
        }
    }

    void realizarAccion() {
        try {
            int cantidad = Integer.valueOf(cantidad_txt.getText());
            double costo_total = Double.valueOf(costo_total_txt.getText());

            conexion = new DBconnection("localhost", "3307", "inventario_db", "root", "Mysql@fuentech2018");
            con = conexion.getConnection();

            if (comprar_rButton.isSelected()) {
                double costo_unitario = producto.calcularTotal(costo_total) / producto.calcularCantidad(cantidad);

                String query = "UPDATE producto SET "
                        + "cantidad_producto = ?, "
                        + "costo_unitario_producto = ?, "
                        + "costo_total_producto = ? "
                        + "WHERE nombre_producto = ?";

                ps = con.prepareStatement(query);
                ps.setInt(1, producto.calcularCantidad(cantidad));
                ps.setDouble(2, costo_unitario);
                ps.setDouble(3, producto.calcularTotal(costo_total));
                ps.setString(4, producto.getNombre());

                int notifica = ps.executeUpdate();

                if (notifica > 0) {
                    JOptionPane.showMessageDialog(null, "Compra registrada");
                    guardarKardex("compra");
                } else {
                    JOptionPane.showMessageDialog(null, "Error al registrar");
                    //limpiar();
                }

            }
            if (vender_rButton.isSelected()) {

                double ventaUnitario = producto.ventaTotal(costo_total) / producto.ventaCantidad(cantidad);

                String query = "UPDATE producto SET "
                        + "cantidad_producto = ?, "
                        + "costo_unitario_producto = ?, "
                        + "costo_total_producto = ? "
                        + "WHERE nombre_producto = ?";

                ps = con.prepareStatement(query);
                ps.setInt(1, producto.ventaCantidad(cantidad));
                ps.setDouble(2, ventaUnitario);
                ps.setDouble(3, producto.ventaTotal(costo_total));

                ps.setString(4, producto.getNombre());

                int notifica = ps.executeUpdate();

                if (notifica > 0) {
                    JOptionPane.showMessageDialog(null, "Compra registrada");
                    guardarKardex("venta");
                } else {
                    JOptionPane.showMessageDialog(null, "Error al registrar");
                    //limpiar();
                }
            }
        } catch (SQLException ex) {
            Logger.getLogger(AccionView.class.getName()).log(Level.SEVERE, null, ex);
        }
    }

    void cerrarVentana() {
        this.hide();
        System.gc();
    }

    void cargarProducto() {
        try {
            producto = new Producto();

            String query = "SELECT * FROM producto WHERE nombre_producto = ?";
            conexion = new DBconnection("localhost", "3307", "inventario_db", "root", "Mysql@fuentech2018");
            con = conexion.getConnection();
            ps = con.prepareStatement(query);
            ps.setString(1, articulo_label.getText());

            rs = ps.executeQuery();

            if (rs.next()) {
                producto.setId(rs.getInt("id_producto"));
                producto.setNombre(rs.getString("nombre_producto"));
                producto.setCantidad(rs.getInt("cantidad_producto"));
                producto.setCosto_unitario(rs.getDouble("costo_unitario_producto"));
                producto.setCosto_total(rs.getDouble("costo_total_producto"));
            } else {
                JOptionPane.showMessageDialog(null, "No hay registro");
            }

            con.close();

        } catch (SQLException ex) {
            Logger.getLogger(AccionView.class.getName()).log(Level.SEVERE, null, ex);
        }
    }

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Windows".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(AccionView.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(AccionView.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(AccionView.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(AccionView.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new AccionView().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JPanel Accion_panel;
    private javax.swing.JButton aceptar_button;
    private javax.swing.JTextField anio_txt;
    public javax.swing.JLabel articulo_label;
    private javax.swing.ButtonGroup buttonGroup1;
    private javax.swing.JButton cancelar_button;
    private javax.swing.JTextField cantidad_txt;
    private javax.swing.JRadioButton comprar_rButton;
    private javax.swing.JTextField costo_total_txt;
    private javax.swing.JTextField costo_unitario_txt;
    private javax.swing.JTextField dia_txt;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JTextField mes_txt;
    private javax.swing.JRadioButton vender_rButton;
    // End of variables declaration//GEN-END:variables
}
